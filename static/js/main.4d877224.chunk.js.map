{"version":3,"sources":["logo.svg","images/plumbing1.jpg","images/auto1.jpg","images/resto3.jpg","serverInterface/server.js","components/Home.js","components/Places.js","components/Checkpoints.js","components/aPlace.js","components/Businesses.js","images/resto2.jpg","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["api","server","fetchPlaces","fetch","then","x","json","fetchReviews","typeid","pushAPlace","data","method","header","body","JSON","stringify","newBusinessInfo","totalReviews","reviews","Home","props","handleSearchSubmitted","state","place","arrAddress","address","split","town","toUpperCase","substring","toLowerCase","insensitivePlace","history","push","pathname","business","handleInputChange","event","value","target","name","setState","newBusiness","handleOnClickAddBusiness","alert","handleOnClickWriteReview","handleOnClickAddBusinessState","addBusiness","handleOnClick","handleAReview","businessDetails","details","addBusinessSubmit","console","log","preventDefault","goToLogin","goLogout","selectBusinesses","aLocation","id","Form","onSubmit","Group","as","Row","controlId","Label","column","sm","Col","Control","onChange","placeholder","defaultValue","Check","type","label","Button","tableBusinesses","className","Card","style","width","Img","variant","src","Restaurant","Body","onClick","Plumber","Auto","getBusinesses","item","Header","Image","Resto","fluid","Title","Text","hours","phone","href","link","website","size","active","searchBars","location","Nav","activeKey","Item","Link","signedIn","selected","busineessType","entries","catch","e","username","this","user","to","length","Container","map","React","Component","Places","storage","Place","handleOnSubmit","review","getAllReviews","render","undefined","cost","categories","rows","Businesses","Jumbotron","Login","logInSubmit","trim","authenticated","hadleChange","from","height","alt","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d877224.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/plumbing1.0af04adf.jpg\";","export default __webpack_public_path__ + \"static/media/auto1.924f1c52.jpg\";","export default __webpack_public_path__ + \"static/media/resto3.a4f8ff41.jpg\";","let api = \"https://hamzahfirman-nearbyplaces-api.herokuapp.com\";\n// A Function that will fecth all entries\nlet server = {\n    fetchPlaces: () => {return(fetch(api + \"/places\").then(x => x.json()));},\n    fetchReviews: (typeid) => {return(fetch(api + `/reviews/${typeid}`).then(x => x.json()));},\n    // pushAReview: () => { return(fetch(api))}\n    // pushAReview: () => {return(fetch(api + \"/search\").then(x => x.json()));},\n    pushAPlace: (data) => {return (fetch(api + \"/place\", {\n                method: 'POST',\n                header: {'Content-Type': 'application/json'},\n                body: JSON.stringify(data)\n    }))}};\n\n\nexport default server;","import React from 'react';\n/* REACT BOOSTRAP */\nimport { Nav, Form, Col, Table, Row, Card, Button, InputGroup, Image, Container } from 'react-bootstrap';\n/* REACT ROUTER */\nimport { Link, Redirect } from 'react-router-dom';\n/* CSS */\nimport './Home.css';\n/* Images */\nimport Plumber from \"../images/plumbing1.jpg\";\nimport Auto from \"../images/auto1.jpg\";\nimport Restaurant from \"../images/resto3.jpg\";\nimport Resto from '../images/resto3.jpg';\n/* Data */\nimport server from \"../serverInterface/server\";\n/* New Business Info */\nvar newBusinessInfo = {\n    totalReviews: 0,\n    reviews:[]\n};\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            selected: false,\n            busineessType: \"\",\n            place:\"\",\n            address:\"\",\n            addBusiness: false,\n            goToLogin: false,\n            newBusiness: {},\n            entries:[]\n        }\n    }\n    /* -------------- Event Handlers -------------  */\n    handleSearchSubmitted = () => {\n        let { place, address } = this.state;\n        let arrAddress = address.split(\", \");\n        let town = arrAddress[0][0].toUpperCase() + arrAddress[0].substring(1).toLowerCase();\n        let state = arrAddress[1].toUpperCase();\n        let insensitivePlace = place.toLowerCase();\n\n        if(insensitivePlace === \"restaurants\" || insensitivePlace === \"plumbers\"\n         || insensitivePlace === \"auto repairs\" ){\n            this.props.history.push({\n                pathname: \"/businesses\",\n                business: insensitivePlace[0].toUpperCase() + insensitivePlace.substring(1),\n                address: town + \", \" + state});\n\n        }else{ //  User only chosen a Place \n            this.props.history.push({\n                            pathname: \"/businesses\",\n                            business: this.state.place,\n                            address: this.state.address});\n\n        }\n    }\n    handleInputChange = (event) => {\n\n        const value = event.target.value;\n        const name = event.target.name;\n\n        newBusinessInfo[name] = value;\n        // Changes the username\n        this.setState({\n            newBusiness: newBusinessInfo\n        });\n    }\n\n    handleOnClickAddBusiness = () => {\n        alert(\"Login is required\");\n\n    }\n    handleOnClickWriteReview = () => {\n        alert(\"Login is required\");\n\n    }\n    handleOnClickAddBusinessState = () => {\n        this.setState({addBusiness: true})\n    }\n    handleOnClick = (business, address) => {\n        this.props.history.push({\n            pathname: \"/businesses\",\n            business: business,\n            address: address\n            });\n    }\n    handleAReview = (businessDetails) => {\n        this.props.history.push({\n            pathname: \"/place\",\n            details: businessDetails});\n    }\n    addBusinessSubmit = (event) => {\n        console.log(this.state.newBusiness);\n        server.pushAPlace(this.state.newBusiness);\n        newBusinessInfo = {\n            totalReviews: 0,\n        };\n        this.setState({\n            newBusiness: newBusinessInfo\n        });\n        this.setState({\n            addBusiness: false\n        });\n        event.preventDefault();\n    }\n    goToLogin = () => {\n        this.props.history.push({pathname:\"/login\"});\n    }\n    goLogout = () => {\n        this.props.history.push({pathname: \"/\"});\n    }\n\n    componentDidMount() {\n        const data = server.fetchPlaces().then(x => this.setState({entries: x})).catch(e => console.log(e));\n    }\n    /* ------------------------------------------ */\n    // METHOD:\n    selectBusinesses = (aLocation) => {\n        return(\n            <div>\n                The Best Businesses in {aLocation}\n            </div>\n        );\n    }\n    addBusiness = () => {\n        return(\n\n            <div>\n                <div id=\"titleNewBusiness\">\n                Add a Business\n                </div>\n                <hr></hr>\n                <div id=\"addBusinessForm\">\n                    <Form onSubmit={this.addBusinessSubmit}>\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                        Place Name \n                        </Form.Label>\n                        <Col sm={5}>\n                        <Form.Control\n                        \n                        onChange = {this.handleInputChange}\n                        name=\"name\" \n                        placeholder=\"Place Name\" />\n                        </Col>\n                    </Form.Group>\n                    \n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={2}>\n                        Address\n                        </Form.Label>\n                        <Col sm={5}>\n                        <Form.Control \n\n                        onChange = {this.handleInputChange}\n                        name=\"address\"\n                        placeholder=\"Street Name\" \n                        />\n                        </Col>\n                    </Form.Group>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control \n                    onChange = {this.handleInputChange}\n                    name=\"zip\" />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control \n                    as=\"select\" \n                    defaultValue=\"State\"\n                    name=\"state\"\n                    onChange={this.handleInputChange}>\n                        <option>State</option>\n                        <option>AZ</option>\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Zip</Form.Label>\n                    <Form.Control  \n                    onChange = {this.handleInputChange}\n                    name=\"zip\"\n                    placeholder=\"xxxxx\" />\n                    </Form.Group>\n                 </Form.Row>\n                   <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                 <Form.Label column sm={2}>\n                 Hours\n                 </Form.Label>\n                 <Col sm={5}>\n                 <Form.Control\n                 \n                 onChange = {this.handleInputChange}\n                 name=\"hours\" \n                 placeholder=\"Ex: xx:xx AM - xx:xx PM \" />\n                 </Col>\n                </Form.Group>\n                 <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                 <Form.Label column sm={2}>\n                 Phone\n                 </Form.Label>\n                 <Col sm={5}>\n                 <Form.Control\n                 \n                 onChange = {this.handleInputChange}\n                 name=\"phone\" \n                 placeholder=\"Ex: (xxx) xxx-xxxx\" />\n                 </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={2}>\n                Category\n                </Form.Label>\n                <Col sm={5}>\n                <Form.Control\n                \n                onChange = {this.handleInputChange}\n                name=\"categories\" \n                placeholder=\"Ex: Pizza, Plumbing, Noodles, etc,.\" />\n                </Col>\n                </Form.Group>\n                    <Form.Group as={Row}>\n                    <Form.Label as=\"legend\" column sm={2}>\n                        Cost \n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                        type=\"radio\"\n                        onChange = {this.handleInputChange}\n                        value = \"$\" \n                        label=\"$\"\n                        name=\"cost\"\n                        />\n                        <Form.Check\n                        type=\"radio\"\n                        onChange = {this.handleInputChange}\n                        value = \"$$\" \n                        label=\"$$\"\n                        name=\"cost\"\n                        />\n                        <Form.Check\n                        type=\"radio\"\n                        onChange = {this.handleInputChange}\n                        value = \"$$$\" \n                        label=\"$$$\"\n                        name=\"cost\"\n                        />\n                    </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                    <Form.Label as=\"legend\" column sm={2}>\n                        Business\n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Check\n                        type=\"radio\"\n                        onChange = {this.handleInputChange}\n                        value = \"restaurants\" \n                        label=\"Restaurant\"\n                        name=\"type\"\n                        />\n                        <Form.Check\n                        type=\"radio\"\n                        onChange = {this.handleInputChange}\n                        value = \"plumbers\" \n                        label=\"Plumbing\"\n                        name=\"type\"\n                        />\n                        <Form.Check\n                        type=\"radio\"\n                        onChange = {this.handleInputChange}\n                        value = \"auto pairs\" \n                        label=\"Auto Pairs\"\n                        name=\"type\"\n                        />\n                    </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                    <Form.Label column sm={2}>\n                    Website\n                    </Form.Label>\n                    <Col sm={5}>\n                    <Form.Control\n                    \n                    onChange = {this.handleInputChange}\n                    name=\"website\" \n                    placeholder=\"Ex: test123.com\" />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={2}>\n                Link\n                </Form.Label>\n                <Col sm={5}>\n                <Form.Control\n                \n                onChange = {this.handleInputChange}\n                name=\"link\" \n                placeholder=\"Ex: https://test123.com\" />\n                </Col>\n            </Form.Group>\n                    <Button as=\"input\" id=\"textSubmit\" placeholder=\"Submit\" type=\"submit\" />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n    // METHOD: \n    tableBusinesses = (address) => {\n        return(\n            <div>\n                <table className=\"tableBusinesses\">\n                        <tr>\n                            <td>\n                                <Card  style={{ width: '10rem' }}>\n                                    <Card.Img variant=\"top\" src={Restaurant} />\n                                        <Card.Body>\n                                            <div className=\"buttonContainer\">\n                                                <Button id=\"buttonBusinesses\" onClick={() => this.handleOnClick(\"Restaurants\",address)}>Restaurants</Button>\n                                            </div>\n                                    </Card.Body>\n                                </Card>\n                            </td>\n                            <td>\n                                <Card style={{ width: '10rem' }}>\n                                    <Card.Img variant=\"top\" src={Plumber} />\n                                        <Card.Body>\n                                            <div className=\"buttonContainer\">\n                                                <Button id=\"buttonBusinesses\"  onClick={() => this.handleOnClick(\"Plumbers\",address)}>Plumbers</Button>\n                                            </div>\n                                    </Card.Body>\n                                </Card>\n                            </td>\n                            <td>\n                                <Card style={{ width: '10rem' }}>\n                                    <Card.Img variant=\"top\" src={Auto}/>\n                                        <Card.Body>\n                                            <div className=\"buttonContainer\">\n                                                <Button id=\"buttonBusinesses\"  onClick={() => this.handleOnClick(\"Auto Repairs\",address)}>Auto Repairs</Button>\n                                            </div>\n                                    </Card.Body>\n                                </Card>\n                            </td>\n                        </tr>\n                </table>\n            </div>\n        );\n    }\n    getBusinesses = (item) => {\n        return (\n            <div>\n                <Col>\n                    <Card className=\"cardBusiness\" style={{ width: '12rem' }}>\n                            <Card.Header>{item.name}</Card.Header>\n                        <Card.Body>\n                        <Image id=\"imageBusiness\" src={Resto} fluid />\n                            <Card.Title id=\"cardBusinessTitle\">Total Reviews: {item.totalReviews}</Card.Title>\n                                <Card.Text id=\"cardBusinessText\">\n                                    Address: {item.address}{<br/>}\n                                    Hours  : {item.hours}{<br/>}\n                                    Phone  : {item.phone}{<br/>}\n                                    Website: {<a href={item.link}>{item.website}</a>}{<br/>}\n                                    <Button variant=\"secondary\" id=\"reviewButton\" onClick={() => this.handleAReview(item)}size=\"sm\" active>\n                                         Write a Review\n                                    </Button> \n                                </Card.Text>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </div>\n        );\n    }\n\n    // METHOD: \n    searchBars = () => {\n\n        return(\n            <div>\n                <div className=\"formBody\">\n                        <form className=\"loginNow\" onSubmit={this.handleSearchSubmitted} >\n                            <input \n                                value={this.state.place}\n                                onChange = {this.handleInputChange}\n                                id=\"placeInput\"\n                                type=\"text\" \n                                name=\"place\"\n                                placeholder=\"restaurants, plumbers, or auto repairs\"\n                            />\n                            <input\n                                value={this.state.location}\n                                onChange = {this.handleInputChange}\n                                id=\"addressInput\"\n                                type=\"text\"\n                                name=\"address\" \n                                placeholder=\"Tucson, AZ\"\n                            />\n                         <button type=\"submit\" id=\"loginNow\">Find</button>\n                    </form>\n                </div>  \n        </div>\n        );\n    }\n    // METHOD:\n    body = () => {\n        return (\n            <div>\n                <div className=\"bodyContainer\">\n\n                    <Nav className=\"justify-content-end\" activeKey=\"/home\">\n                        <Nav.Item>\n                            <Nav.Link className=\"navLinks\" onClick={this.handleOnClickWriteReview}>Write a Review</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link className=\"navLinks\" onClick={this.handleOnClickAddBusiness}>Add a Business</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link  className=\"navLinks\" onClick={this.goToLogin}>Login</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <div id=\"welcome\">\n                        WELCOME TO FINDAPLACE\n                    </div>\n                    {this.searchBars()}\n                </div>\n                <div className=\"selectBusinesses\">Login is required to see the best businesses in Tucson, AZ below.</div>\n            </div>\n        );\n    }\n    // METHOD: Displays the given username on top right of the screen and offers \n    // a logout button.\n    signedIn = (name, location) => {\n        return (\n            <div>\n                <div className=\"bodyContainer\">\n                    <div id=\"logout\">\n                        <Nav className=\"justify-content-end\" activeKey=\"/home\">\n                            <Nav.Item>\n                                <Nav.Link className=\"navLinks\" onClick={this.goLogout}>Logout</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </div>\n                    <Nav className=\"justify-content-end\" activeKey=\"/home\">\n                        <Nav.Item>\n                            <Nav.Link className=\"navLinks\" href=\"\">Write a Review</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link className=\"navLinks\" onClick={this.handleOnClickAddBusinessState}>Add a Business</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link  className=\"navLinks\" href=\"\">{name}</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <div id=\"welcome\">\n                        WELCOME TO FINDAPLACE\n                    </div>\n                    {this.searchBars()}\n                </div>  \n            </div>\n        );\n    }\n    render() {\n        // Captures the a given username from login\n        let username = '';\n        let aLocation = '';\n\n        const location = this.props.location;\n        let { addBusiness, entries } = this.state;\n        if(location) {\n            if(location.state){\n                if(location.state.user && location.state.location){\n                    username = location.state.user;\n                    aLocation = location.state.location;\n                  \n                }\n            }\n        }\n\n        if(this.state.goToLogin == true){\n            return(\n            <Redirect to= {{pathname: '/login'}}/>\n            );\n        }\n        if(username.length > 0 && addBusiness === true ){\n            return(\n                <div>\n                    <div>\n                    {this.signedIn(username, aLocation)}\n                    </div>\n                    <div>\n                        {this.addBusiness()}\n                    </div>\n                    <hr></hr>\n                    <div className=\"selectBusinesses\">\n                        {this.selectBusinesses(aLocation)}\n                    </div>\n                    <br></br>\n                    <div id=\"businessCards\">\n                    <Container >\n                        <Row>\n                            {entries.map(this.getBusinesses)}\n                        </Row>\n                    </Container>\n                </div>\n                   \n                </div>\n            );\n        }\n        if(username.length > 0){\n            return(\n                <div>\n                    <div>\n                    {this.signedIn(username, aLocation)}\n                    </div>\n                    <div className=\"selectBusinesses\">\n                        {this.selectBusinesses(aLocation)}\n                    </div>\n                    <br></br>\n                    <div id=\"businessCards\">\n                    <Container >\n                        <Row>\n                            {entries.map(this.getBusinesses)}\n                        </Row>\n                    </Container>\n                </div>\n                </div>\n                \n            );\n        }\n        return(\n            <div>\n                {this.body()}\n            </div>\n        );\n\n    }\n\n}\n\n\nexport default Home;","import React from 'react';\n/* Data */\n\n\n\nclass Places extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n    render() {\n        return(\n            <div>\n                This is Places\n            </div>\n        );\n\n    }\n\n}\n\n\nexport default Places;","var currentData = {\n    business:\"\",\n    location:\"\"\n\n};\nvar storage = {};\nvar currPlaceData = (entries) =>{\n     storage = entries;\n};\n\nexport { \n    storage, \n    currPlaceData,\n    currentData, };","import React from 'react';\n/* CSS */\nimport \"./aPlace.css\";\n/* REACT BOOSTRAP  */\nimport { Jumbotron, Form, Container, Card, Row, Image, Button, Col, Carousel } from 'react-bootstrap';\n/* Data */\nimport { storage, currPlaceData } from \"./Checkpoints\";\nimport server from \"../serverInterface/server\";\n\nvar DATA;\nvar CHECKPOINT= false\nclass Place extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:\"\",\n            review:\"\",\n            data: {},\n            render: true\n        }\n\n    }\n    handleOnSubmit = (event) => {\n     \n        let { username, review } = this.state;\n        storage.reviews.push({username: username, review: review})\n        storage.totalReviews += 1;\n        this.setState({username:\"\",review:\"\"})\n\n        event.preventDefault();\n    }\n    getAllReviews = (item) => {\n        return (\n            <div>\n                <div id=\"aReview\">\n                     \"{item.review}\" - {item.username}\n                </div>\n            </div>\n        );\n\n\n    }\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        // Changes the username\n        this.setState({\n            [name]: value\n        });\n    }\n\n    componentDidMount() {\n        console.log(this.props.location.details);\n        console.log(this.props.location.details.id);\n        const data = server.fetchReviews(this.props.location.details.id).then(x => this.setState({data: x})).catch(e => console.log(e));\n    }\n    render() {\n\n    \n        const { data } = this.state\n        console.log(this.props.location.details);\n        if(data.name != undefined){\n            const { name, address, phone, \n                cost, categories, totalReviews } = data;\n            return(\n\n                <div>\n                    <div id=\"bussinessDescription\">\n                        <h1>{name}</h1>\n                        <p>\n                            {address}{<br/>}\n                            {phone}{<br/>}\n                            {cost} - {categories}{<br/>}\n                            <span id=\"totalReviews\">Total reviews: {totalReviews}</span>\n                        </p>\n                    </div>\n                    <hr/>\n                    <Form id=\"textArea\" onSubmit={this.handleOnSubmit}>\n                        <Form.Control  \n                        value = {this.state.username}\n                        onChange = {this.handleInputChange}\n                        name=\"username\" \n                        placeholder=\"username\"/> {<br></br>}\n                        <Form.Control \n                        as=\"textarea\" \n                        placeholder=\"Write your review here ... \" \n                        rows={3}\n                        value = {this.state.review}\n                        onChange = {this.handleInputChange}\n                        name=\"review\" \n                        />{<br></br>}\n                        <Button as=\"input\" id=\"textSubmit\"  type=\"submit\" />\n                    </Form>\n                    <div id=\"allReviews\">\n                        <h5>Recent Reviews:</h5>\n                        {data.reviews.map(this.getAllReviews)}\n                    </div>\n                </div>\n            );\n\n        }else{\n           \n            return(\n                <div>\n                    Data is loading...\n                </div>\n            );\n\n        }\n    }}\n\nexport default Place;","import React from 'react';\n/* REACT BOOSTRAP  */\nimport { Jumbotron, Container, Card, Row, Image, Form, Button, Col } from 'react-bootstrap';\n/* Images */\nimport Resto from '../images/resto3.jpg';\n/* CSS */\nimport './Businesses.css';\n/* Data */\nimport server from '../serverInterface/server';\n/* Checkpoint */\nimport { currentData }  from './Checkpoints';\n\nvar LOCATION = \"\";\nvar BUSINESS = \"\";\nclass Businesses extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            entries: []\n        };\n    }\n    handleAReview = (businessDetails) => {\n        this.props.history.push({\n            pathname: \"/place\",\n            details: businessDetails});\n    }\n\n    getBusinesses = (item) => {\n        return (\n            <div>\n                <Col>\n                    <Card className=\"cardBusiness\" style={{ width: '12rem' }}>\n                            <Card.Header>{item.name}</Card.Header>\n                        <Card.Body>\n                        <Image id=\"imageBusiness\" src={Resto} fluid />\n                            <Card.Title id=\"cardBusinessTitle\">Total Reviews: {item.totalReviews}</Card.Title>\n                                <Card.Text id=\"cardBusinessText\">\n                                    Address: {item.address}{<br/>}\n                                    Hours  : {item.hours}{<br/>}\n                                    Phone  : {item.phone}{<br/>}\n                                    Website: {<a href={item.link}>{item.website}</a>}{<br/>}\n                                    <Button variant=\"secondary\" id=\"reviewButton\" onClick={() => this.handleAReview(item)}size=\"sm\" active>\n                                         Write a Review\n                                    </Button> \n                                </Card.Text>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n        \n        // if(currentData[\"business\"] == \"\"){\n\n        //     // Queries Values\n        //     const location = this.props.location;\n        //     BUSINESS = location.business;\n        //     LOCATION = location.address;\n        //     currentData[\"business\"] = BUSINESS;\n        //     currentData[\"location\"] = LOCATION;\n          \n            \n        //     //Fetches the data through the server\n        const data = server.fetchPlaces().then(x => this.setState({entries: x})).catch(e => console.log(e));\n        // }else{\n        //     if((this.props.location.business != undefined &&\n        //         this.props.location.business != BUSINESS)\n        //          && (this.props.location.address != LOCATION &&\n        //             this.props.location.address != undefined) \n        //             ||(this.props.location.address == LOCATION &&\n        //             this.props.location.address != undefined)){\n                        \n        //             const location = this.props.location;\n        //             BUSINESS = location.business;\n        //             LOCATION = location.address;\n        //             currentData[\"business\"] = BUSINESS;\n        //             currentData[\"location\"] = LOCATION;\n        //          }else{\n        //             LOCATION = currentData[\"location\"];\n        //             BUSINESS = currentData[\"business\"];\n        //          }\n        //     //Fetches the data through the server\n        //     const data = server.fetchPlaces(BUSINESS);\n        //     console.log(data.businesses);\n        //     this.setState({entries: data.businesses});\n        // }\n\n    }\n\n    render() {\n        const { entries } = this.state;\n        console.log(entries);\n        if(entries.length > 0){\n            console.log(entries);\n            return(\n                <div>\n                    \n                    <div id=\"brandName\">\n                        FINDAPLACE\n                    </div>\n                    <Form.Row id=\"searchForm\">\n                            <Col>\n                            <Form.Control width=\"10px\" placeholder=\"Under Construction ... \" />\n                            </Col>\n                            <Col>\n                            <Button id=\"buttonForm\" type=\"submit\">\n                                Find\n                            </Button>\n                            </Col>\n                    </Form.Row>\n                    <div>\n                        <Jumbotron id=\"headerJumbotron\" fluid>\n                            <Container id=\"headerContainer\">\n                                <h1 id=\"header\">The Best {BUSINESS} in {LOCATION}</h1>\n                            </Container>\n                        </Jumbotron>\n                    </div>\n                    <div id=\"businessCards\">\n                        <Container >\n                            <Row>\n                                {entries.map(this.getBusinesses)}\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            );\n        \n    }else{\n        return(\n            <div>\n                Data is loading...\n            </div>\n            );\n          \n    }\n    \n    }\n    \n}\n\nexport default Businesses;","export default __webpack_public_path__ + \"static/media/resto2.ba9d340a.jpg\";","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n/* REACT BOOSTRAP */\nimport { Button } from 'react-bootstrap';\n/* CSS */\nimport './Login.css';\n/* Images */\nimport Resto from '../images/resto2.jpg';\n\nclass Login extends React.Component {\n    // State of this component\n    constructor(props) {\n        super(props);\n        // State is an object\n        this.state = {\n            username: '',\n            authenticated: false,\n            location: \"\"\n        };\n    }\n    // Submit \n    logInSubmit = (event) => {\n        if (this.state.username.trim().length > 0) {\n            //Let them into the Homepage\n            this.setState({\n                authenticated: true\n            });\n        }\n        event.preventDefault();\n\n    }\n    hadleChange = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        // Changes the username\n        this.setState({\n            [name]: value\n        });\n    }\n    render() {\n        {/* \n        from - is an object that will be passed to\n        homepage component. Also, 'state' property\n        inside form is independent from the 'state' \n        in the constructor of this component\n         */}\n        let from = { pathname: '/', state: { user: this.state.username, \n            location: this.state.location} }\n        if (this.state.authenticated) {\n            {/* Redirect to the Homepage */}\n            return (\n                <Redirect to={from} />\n            );\n        }\n\n        return (\n            <div>\n                <div id=\"headerTitle\">FINDAPLACE</div>\n                <div className=\"login\">\n                    <form className=\"form\" onSubmit={this.logInSubmit}>\n                        <input\n                            type=\"text\"\n                            value={this.state.username}\n                            onChange={this.hadleChange}\n                            name=\"username\" \n                            placeholder=\"username\"/>\n                            <br/>\n                            <br/>\n                        <input\n                            type=\"text\"\n                            value={this.state.location}\n                            onChange={this.hadleChange}\n                            name=\"location\"\n                            placeholder=\"ex: Tucson, AZ\" />\n                            <br/>                  \n                            <br/>            \n                        <Button as=\"input\" type=\"submit\" id=\"loginButton\" value=\"Login\" />\n                    </form>\n                </div>\n                <img src={Resto} id=\"restoImg\" height=\"350px\" width=\"500px\" alt=\"resto2\"/>\n            </div>\n        );\n    }\n}\n\n\nexport default Login;","import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\n\n/* Components */\nimport Home from './components/Home';\nimport Places from './components/Places';\nimport Place from './components/aPlace';\nimport Businesses from './components/Businesses';\nimport Login from './components/Login';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/' render={ props => <Home {...props}/>}>\n        </Route>\n        <Route  path='/places'>\n          <Places/>\n        </Route>\n        <Route  path='/place' render={ props => <Place {...props}/>}>\n        </Route>\n        <Route path='/login' render={ props => <Login {...props}/>}>\n        </Route>\n        <Route  path='/businesses' render={ props => <Businesses {...props}/>}>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}